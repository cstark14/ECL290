setwd("C:/Users/valen/Documents/Github/ECL290")
cmdstanr::install_cmdstan(dir="C:/Users/valen/")
heightForWeight <- function(weight){
y <- rnorm(1e5,post$a+post$b*(weight-xbar),post$sigma)
return(c(mean(y),PI(y,prob=0.89)))
}
weightsInQ <- c(46.95,43.72,64.78,32.59,54.63)
heightsForWeights <- sapply(weightsInQ,heightForWeight(x))
post <- extract.samples(m)
heightsForWeights <- sapply(weightsInQ,heightForWeight(x))
library(coda)
library(devtools)
library(loo)
library(mvtnorm)
library(dagitty)
library(shape)
library(tidyverse)
library(rethinking)
data(Howell1)
d <- Howell1
d2 <- d[ d$age >= 18 , ]
xbar <- mean(d2$weight)
m <- quap(
alist(
height ~ dnorm( mu , sigma ) ,
mu <- a + b*( weight - xbar ) ,
a ~ dnorm( 178 , 20 ) ,
b ~ dlnorm( 0 , 1 ) ,
sigma ~ dunif( 0 , 50 )
) , data=d2 )
post <- extract.samples(m)
post
heightForWeight <- function(weight){
y <- rnorm(1e5,post$a+post$b*(weight-xbar),post$sigma)
return(c(mean(y),PI(y,prob=0.89)))
}
weightsInQ <- c(46.95,43.72,64.78,32.59,54.63)
heightsForWeights <- sapply(weightsInQ,heightForWeight(x))
heightsForWeights <- sapply(weightsInQ,heightForWeight())
heightsForWeights <- sapply(weightsInQ,heightForWeight)
View(heightsForWeights)
##### 4H2
d3 <- d[ d$age < 18 , ]
xbar <- mean(d3$weight)
m4H2 <- quap(
alist(
height ~ dnorm( mu , sigma ) ,
mu <- a + b*( weight - xbar ) ,
a ~ dnorm( 178 , 20 ) ,
b ~ dlnorm( 0 , 1 ) ,
sigma ~ dunif( 0 , 50 )
),data=d3
)
precis(m4H2)
post < extract.samples(m4H2,1e4)
post <- extract.samples(m4H2,1e4)
post <- extract.samples(m4H2)
mu.link <- link(m4H2,data=data.frame(weight=weight.seq))
weight.seq <- seq(from=1,to=45,by=1)
mu.link <- link(m4H2,data=data.frame(weight=weight.seq))
View(mu.link)
plot(height~weight, d3,type="n")
for(i in 1:100){
points(weight.seq,mu.link[i,],col=col.alpha(rangi2,0.01))
}
mu.link.mean <- apply(mu.link,2,mean)
mu.link.PI <- apply(mu.link,2,PI,prob=0.89)
lines( weight.seq , mu.link.mean )
shade(mu.link.PI,weight.seq)
height.PI <- apply(sim.height,2,PI,prob=0.89)
sim.height <- sim( m4H2 , data=list(weight=weight.seq) )
height.PI <- apply(sim.height,2,PI,prob=0.89)
shade(height.PI,weight.seq)
plot(height~weight, d3,col=col.alpha(rangi2,0.5))
for(i in 1:100){
points(weight.seq,mu.link[i,],col=col.alpha(rangi2,0.01))
}
lines( weight.seq , mu.link.mean )
shade(mu.link.PI,weight.seq)
shade(height.PI,weight.seq)
#### 4H3
xbar <- mean(d$weight)
m4H3 <- quap(
alist(
height ~ dnorm( mu , sigma ) ,
mu <- a + b*( log(weight) - xbar ) ,
a ~ dnorm( 178 , 20 ) ,
b ~ dlnorm( 0 , 1 ) ,
sigma ~ dunif( 0 , 50 )
),data=d
)
precis(m4H2)
post <- extract.samples(m4H3)
weight.seq <- seq(from=1,to=45,by=1)
mu.link <- link(m4H2,data=data.frame(weight=weight.seq))
mu.link.mean <- apply(mu.link,2,mean)
mu.link.PI <- apply(mu.link,2,PI,prob=0.89)
sim.height <- sim( m4H3 , data=list(weight=weight.seq) )
height.PI <- apply(sim.height,2,PI,prob=0.89)
plot(height~weight, d,col=col.alpha(rangi2,0.5))
lines( weight.seq , mu.link.mean )
shade(mu.link.PI,weight.seq)
shade(height.PI,weight.seq)
#### 4H3
xbar <- mean(log(d$weight))
m4H3 <- quap(
alist(
height ~ dnorm( mu , sigma ) ,
mu <- a + b*( log(weight) - xbar ) ,
a ~ dnorm( 178 , 20 ) ,
b ~ dlnorm( 0 , 1 ) ,
sigma ~ dunif( 0 , 50 )
),data=d
)
precis(m4H2)
post <- extract.samples(m4H3)
weight.seq <- seq(from=1,to=45,by=1)
mu.link <- link(m4H2,data=data.frame(weight=weight.seq))
mu.link.mean <- apply(mu.link,2,mean)
mu.link.PI <- apply(mu.link,2,PI,prob=0.89)
sim.height <- sim( m4H3 , data=list(weight=weight.seq) )
height.PI <- apply(sim.height,2,PI,prob=0.89)
plot(height~weight, d,col=col.alpha(rangi2,0.5))
lines( weight.seq , mu.link.mean )
##### 4H2
d3 <- d[ d$age < 18 , ]
xbar <- mean(d3$weight)
m4H2 <- quap(
alist(
height ~ dnorm( mu , sigma ) ,
mu <- a + b*( weight - xbar ) ,
a ~ dnorm( 178 , 20 ) ,
b ~ dnorm( 0 , 1 ) ,
sigma ~ dunif( 0 , 50 )
),data=d3
)
precis(m4H2)
post <- extract.samples(m4H2)
weight.seq <- seq(from=1,to=45,by=1)
mu.link <- link(m4H2,data=data.frame(weight=weight.seq))
mu.link.mean <- apply(mu.link,2,mean)
mu.link.PI <- apply(mu.link,2,PI,prob=0.89)
sim.height <- sim( m4H2 , data=list(weight=weight.seq) )
height.PI <- apply(sim.height,2,PI,prob=0.89)
plot(height~weight, d3,col=col.alpha(rangi2,0.5))
for(i in 1:100){
points(weight.seq,mu.link[i,],col=col.alpha(rangi2,0.01))
}
lines( weight.seq , mu.link.mean )
shade(mu.link.PI,weight.seq)
shade(height.PI,weight.seq)
#### 4H3
logxbar <- mean(log(d$weight))
m4H3 <- quap(
alist(
height ~ dnorm( mu , sigma ) ,
mu <- a + b*( log(weight) - logxbar ) ,
a ~ dnorm( 178 , 20 ) ,
b ~ dnorm( 0 , 10 ) ,
sigma ~ dunif( 0 , 50 )
),data=d
)
precis(m4H2)
#### 4H3
logxbar <- mean(log(Howell1$weight))
m4H3 <- quap(
alist(
height ~ dnorm( mu , sigma ) ,
mu <- a + b*( log(weight) - logxbar ) ,
a ~ dnorm( 178 , 20 ) ,
b ~ dnorm( 0 , 10 ) ,
sigma ~ dunif( 0 , 50 )
),data=Howell1
)
precis(m4H3)
weight.seq <- seq(from=4,to=63,length.out=50)
mu.link <- link(m4H3,data=data.frame(weight=weight.seq))
mu.link.mean <- apply(mu.link,2,mean)
mu.link.PI <- apply(mu.link,2,PI,prob=0.89)
sim.height <- sim( m4H3 , data=list(weight=weight.seq) )
height.PI <- apply(sim.height,2,PI,prob=0.89)
plot(height~weight, Howell1,col=col.alpha(rangi2,0.5))
plot(height~weight, Howell1,col=col.alpha("slateblue",0.5))
lines(weight.seq,mu.link.PI[1,],lty=2)
lines(weight.seq,mu.link.PI[2,],lty=2)
lines(weight.seq,height.PI[1,],lty=2)
lines(weight.seq,height.PI[2,],lty=2)
shade(mu.link.PI,weight.seq)
shade(height.PI,weight.seq)
